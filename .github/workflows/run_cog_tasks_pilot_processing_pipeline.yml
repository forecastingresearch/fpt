concurrency:
  group: fpt-pipeline
  cancel-in-progress: false


name: Run Cognitive Tasks Pilot Processing Pipeline

on:
  pull_request:
    branches: [main]
    paths:
      - 'data_pilot_cognitive_tasks/fpt.Rmd'
      - 'data_pilot_cognitive_tasks/raw_session_data/*'
      - 'data_pilot_cognitive_tasks/metadata_tables/*'
      - '!data_pilot_cognitive_tasks/metadata_tables/task_aig_version.*'
  push:
    branches: [main]  # This will trigger when PRs are merged to main
    paths:
      - 'data_pilot_cognitive_tasks/fpt.Rmd'
      - 'data_pilot_cognitive_tasks/raw_session_data/*'
      - 'data_pilot_cognitive_tasks/metadata_tables/*'
      - '!data_pilot_cognitive_tasks/metadata_tables/task_aig_version.*'
  workflow_dispatch:

jobs:
  run-rmd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          sparse-checkout: |
            /*
            !materials
            !data_forecasting
            !data_cognitive_tasks
            !data_pilot_forecasting
          sparse-checkout-cone-mode: false

      - name: Setup R environment variables
        run: |
          echo "R_LIBS_USER=${{ runner.temp }}/R" >> $GITHUB_ENV
          mkdir -p ${{ runner.temp }}/R

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2.0'

      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev
          
      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: R-${{ runner.os }}-rlibs
          restore-keys: |
            R-${{ runner.os }}-rlibs
          
      - name: Install dependencies
        run: |
          Rscript -e 'if (!requireNamespace("rmarkdown", quietly = TRUE)) install.packages("rmarkdown")'
          Rscript -e 'if (!requireNamespace("tidyverse", quietly = TRUE)) install.packages("tidyverse")'
          Rscript -e 'if (!requireNamespace("jsonlite", quietly = TRUE)) install.packages("jsonlite")'
          Rscript -e 'if (!requireNamespace("scales", quietly = TRUE)) install.packages("scales")'

      - name: Render R Markdown - Rebuild Cache
        run: |
          cd data_pilot_cognitive_tasks && Rscript -e "rmarkdown::render('fpt.Rmd', params = list(LOAD_DATA_FROM_CACHE = FALSE, RENDER_STOP_AFTER_CACHE = TRUE))"
          rm -rf fpt.html

      - name: Render R Markdown - Full
        run: |
          cd data_pilot_cognitive_tasks && Rscript -e "rmarkdown::render('fpt.Rmd', params = list(LOAD_DATA_FROM_CACHE = TRUE))"
          rm -rf fpt.html
      
      - name: CHANGED FILES
        id: changed-files
        run: |
          CHANGED=$(git status --porcelain | awk '{print $2}')

          echo "Changed files:"
          echo "$CHANGED"
          
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          # Check if there are any changes
          if [ -n "$CHANGED" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit changes to repository
        if: |
          github.event_name == 'push' && 
          github.ref == 'refs/heads/main' && 
          steps.changed-files.outputs.has_changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "Auto-update files from R Markdown execution [skip ci]"
          git pull --rebase origin main
          git push
